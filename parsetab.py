
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '83BCAF8D77B5C83F78E183A8C499143D'
    
_lr_action_items = {'$end':([0,1,2,5,8,],[-2,0,-1,-2,-3,]),'CLASS':([0,5,],[4,4,]),'SEMI':([3,7,12,16,21,24,26,30,40,41,42,43,44,45,46,47,48,49,50,],[5,-6,17,-4,-10,-5,-11,-23,-17,-21,-12,-13,-14,-15,-16,-18,-19,-20,-22,]),'TYPE':([4,10,18,],[7,7,7,]),'LBRACE':([6,7,15,],[9,-6,19,]),'INHERITS':([6,7,],[10,-6,]),'LARROW':([7,21,],[-6,23,]),'RBRACE':([9,11,17,19,20,22,],[-8,16,-8,-8,-9,24,]),'IDENTIFIER':([9,17,19,23,27,28,29,32,33,34,35,36,37,38,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'COLON':([13,14,],[18,-7,]),'LPAREN':([14,23,25,27,28,29,32,33,34,35,36,37,38,],[-7,27,31,27,27,27,27,27,27,27,27,27,27,]),'TILDE':([23,27,28,29,32,33,34,35,36,37,38,],[28,28,28,28,28,28,28,28,28,28,28,]),'NOT':([23,27,28,29,32,33,34,35,36,37,38,],[29,29,29,29,29,29,29,29,29,29,29,]),'INTEGER':([23,27,28,29,32,33,34,35,36,37,38,],[30,30,30,30,30,30,30,30,30,30,30,]),'PLUS':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[32,-23,32,32,32,-12,-13,-14,-15,-16,32,32,32,-22,]),'MINUS':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[33,-23,33,33,33,-12,-13,-14,-15,-16,33,33,33,-22,]),'TIMES':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[34,-23,34,34,34,-12,34,34,-15,-16,34,34,34,-22,]),'DIVIDE':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[35,-23,35,35,35,-12,35,35,-15,-16,35,35,35,-22,]),'LT':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[36,-23,36,36,36,-12,-13,-14,-15,-16,36,36,36,-22,]),'LE':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[37,-23,37,37,37,-12,-13,-14,-15,-16,37,37,37,-22,]),'EQUALS':([26,30,39,40,41,42,43,44,45,46,47,48,49,50,],[38,-23,38,38,38,-12,-13,-14,-15,-16,38,38,38,-22,]),'RPAREN':([30,31,39,40,41,42,43,44,45,46,47,48,49,50,],[-23,42,50,-17,-21,-12,-13,-14,-15,-16,-18,-19,-20,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'classlist':([0,5,],[2,8,]),'class':([0,5,],[3,3,]),'type':([4,10,18,],[6,15,21,]),'featurelist':([9,17,19,],[11,20,22,]),'feature':([9,17,19,],[12,12,12,]),'identifier':([9,17,19,23,27,28,29,32,33,34,35,36,37,38,],[13,13,13,25,25,25,25,25,25,25,25,25,25,25,]),'exp':([23,27,28,29,32,33,34,35,36,37,38,],[26,39,40,41,43,44,45,46,47,48,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',102),
  ('classlist -> <empty>','classlist',0,'p_classlist_one','main.py',106),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist_some','main.py',110),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','main.py',114),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherit','main.py',118),
  ('type -> TYPE','type',1,'p_type','main.py',122),
  ('identifier -> IDENTIFIER','identifier',1,'p_indentifier','main.py',126),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',130),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',134),
  ('feature -> identifier COLON type','feature',3,'p_feature_attributenoinit','main.py',138),
  ('feature -> identifier COLON type LARROW exp','feature',5,'p_feature_attributeinit','main.py',142),
  ('exp -> identifier LPAREN RPAREN','exp',3,'p_exp_idparen_none','main.py',146),
  ('exp -> exp PLUS exp','exp',3,'p_exp_plus','main.py',150),
  ('exp -> exp MINUS exp','exp',3,'p_exp_minus','main.py',154),
  ('exp -> exp TIMES exp','exp',3,'p_exp_times','main.py',158),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divide','main.py',162),
  ('exp -> TILDE exp','exp',2,'p_exp_tilde','main.py',166),
  ('exp -> exp LT exp','exp',3,'p_exp_lt','main.py',170),
  ('exp -> exp LE exp','exp',3,'p_exp_le','main.py',174),
  ('exp -> exp EQUALS exp','exp',3,'p_exp_equals','main.py',178),
  ('exp -> NOT exp','exp',2,'p_exp_not','main.py',182),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_paren','main.py',186),
  ('exp -> INTEGER','exp',1,'p_exp_integer','main.py',190),
]
