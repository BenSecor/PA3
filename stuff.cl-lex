1
class
1
type
Test
1
inherits
1
type
IO
1
lbrace
4
identifier
isEven
4
lparen
4
identifier
n
4
colon
4
type
Int
4
rparen
4
colon
4
type
Bool
4
lbrace
5
if
5
lparen
5
identifier
n
5
divide
5
integer
2
5
rparen
5
times
5
integer
2
5
equals
5
identifier
n
5
then
6
true
7
else
8
false
9
fi
10
rbrace
10
semi
13
identifier
manyTests
13
lparen
13
identifier
n
13
colon
13
type
Int
13
rparen
13
colon
13
type
Int
13
lbrace
14
lbrace
15
let
15
identifier
result
15
colon
15
type
Int
15
larrow
15
identifier
n
15
in
16
lbrace
17
identifier
result
17
larrow
17
tilde
17
identifier
result
17
semi
18
identifier
result
18
larrow
18
identifier
result
18
plus
18
integer
10
18
semi
19
identifier
result
19
larrow
19
identifier
result
19
minus
19
integer
5
19
semi
20
identifier
result
20
larrow
20
identifier
result
20
times
20
integer
2
20
semi
21
identifier
result
21
larrow
21
identifier
result
21
divide
21
integer
3
21
semi
22
if
22
identifier
result
22
le
22
integer
0
22
then
23
integer
0
24
else
25
identifier
result
25
plus
25
integer
10
26
fi
26
semi
27
rbrace
27
semi
28
rbrace
29
rbrace
29
semi
32
identifier
complexTests
32
lparen
32
rparen
32
colon
32
type
Object
32
lbrace
33
lbrace
34
let
34
identifier
str
34
colon
34
type
String
34
larrow
34
string
Hello, world!
34
in
35
lbrace
36
identifier
out_string
36
lparen
36
string
Original string: 
36
rparen
36
semi
36
identifier
out_string
36
lparen
36
identifier
str
36
rparen
36
semi
36
identifier
out_string
36
lparen
36
string
\n
36
rparen
36
semi
39
let
39
identifier
newStr
39
colon
39
type
String
39
larrow
39
identifier
str
39
dot
39
identifier
concat
39
lparen
39
string
 More test string stuff
39
rparen
39
in
40
lbrace
41
identifier
out_string
41
lparen
41
string
Concatenated string: 
41
rparen
41
semi
41
identifier
out_string
41
lparen
41
identifier
newStr
41
rparen
41
semi
41
identifier
out_string
41
lparen
41
string
\n
41
rparen
41
semi
42
rbrace
42
semi
45
let
45
identifier
subStr
45
colon
45
type
String
45
larrow
45
identifier
str
45
dot
45
identifier
substr
45
lparen
45
integer
7
45
comma
45
integer
5
45
rparen
45
in
46
lbrace
47
identifier
out_string
47
lparen
47
string
Substring from index 7 to 11: 
47
rparen
47
semi
47
identifier
out_string
47
lparen
47
identifier
subStr
47
rparen
47
semi
47
identifier
out_string
47
lparen
47
string
\n
47
rparen
47
semi
48
rbrace
48
semi
51
let
51
identifier
length
51
colon
51
type
Int
51
larrow
51
identifier
str
51
dot
51
identifier
length
51
lparen
51
rparen
51
in
52
lbrace
53
identifier
out_string
53
lparen
53
string
Length of the string: 
53
rparen
53
semi
53
identifier
out_int
53
lparen
53
identifier
length
53
rparen
53
semi
53
identifier
out_string
53
lparen
53
string
\n
53
rparen
53
semi
54
rbrace
54
semi
57
let
57
identifier
testObj
57
colon
57
type
Test
57
larrow
57
identifier
self
57
in
58
lbrace
59
identifier
out_string
59
lparen
59
string
Polymorphic dispatch example: 
59
rparen
59
semi
59
identifier
testObj
59
dot
59
identifier
manyTests
59
lparen
59
integer
5
59
rparen
59
semi
59
identifier
out_string
59
lparen
59
string
success\n
59
rparen
59
semi
60
rbrace
60
semi
61
rbrace
61
semi
62
rbrace
63
rbrace
63
semi
66
identifier
factorial
66
lparen
66
identifier
n
66
colon
66
type
Int
66
rparen
66
colon
66
type
Int
66
lbrace
67
if
67
identifier
n
67
le
67
integer
1
67
then
68
integer
1
69
else
70
identifier
n
70
times
70
identifier
factorial
70
lparen
70
identifier
n
70
minus
70
integer
1
70
rparen
71
fi
72
rbrace
72
semi
73
rbrace
73
semi
75
class
75
type
Main
75
inherits
75
type
IO
75
lbrace
78
identifier
testDynamicDispatch
78
lparen
78
identifier
ioObj
78
colon
78
type
IO
78
rparen
78
colon
78
type
Object
78
lbrace
79
lbrace
80
identifier
out_string
80
lparen
80
string
Testing dynamic dispatch: 
80
rparen
80
semi
81
identifier
ioObj
81
dot
81
identifier
out_string
81
lparen
81
string
This is dynamically dispatched\n
81
rparen
81
semi
82
rbrace
83
rbrace
83
semi
85
identifier
main
85
lparen
85
rparen
85
colon
85
type
Object
85
lbrace
86
lbrace
87
let
87
identifier
testObj
87
colon
87
type
Test
87
larrow
87
new
87
type
Test
87
in
88
let
88
identifier
num
88
colon
88
type
Int
88
larrow
88
integer
10
88
in
89
lbrace
90
identifier
out_string
90
lparen
90
string
Testing if 
90
rparen
90
semi
90
identifier
out_int
90
lparen
90
identifier
num
90
rparen
90
semi
90
identifier
out_string
90
lparen
90
string
 is even: 
90
rparen
90
semi
91
if
91
identifier
testObj
91
dot
91
identifier
isEven
91
lparen
91
identifier
num
91
rparen
91
then
92
identifier
out_string
92
lparen
92
string
Yes\n
92
rparen
93
else
94
identifier
out_string
94
lparen
94
string
No\n
94
rparen
95
fi
95
semi
97
identifier
out_string
97
lparen
97
string
Factorial of 
97
rparen
97
semi
97
identifier
out_int
97
lparen
97
identifier
num
97
rparen
97
semi
97
identifier
out_string
97
lparen
97
string
 is: 
97
rparen
97
semi
98
identifier
out_int
98
lparen
98
identifier
testObj
98
dot
98
identifier
factorial
98
lparen
98
identifier
num
98
rparen
98
rparen
98
semi
98
identifier
out_string
98
lparen
98
string
\n
98
rparen
98
semi
99
identifier
out_string
99
lparen
99
string
Random tests of 
99
rparen
99
semi
99
identifier
out_int
99
lparen
99
identifier
num
99
rparen
99
semi
99
identifier
out_string
99
lparen
99
string
 is: 
99
rparen
99
semi
100
identifier
out_int
100
lparen
100
identifier
testObj
100
dot
100
identifier
manyTests
100
lparen
100
identifier
num
100
rparen
100
rparen
100
semi
100
identifier
out_string
100
lparen
100
string
\n
100
rparen
100
semi
101
identifier
testObj
101
dot
101
identifier
complexTests
101
lparen
101
rparen
101
semi
103
identifier
testDynamicDispatch
103
lparen
103
identifier
testObj
103
rparen
103
semi
106
identifier
testDynamicDispatch
106
lparen
106
identifier
self
106
rparen
106
semi
107
rbrace
107
semi
108
rbrace
109
rbrace
109
semi
110
rbrace
110
semi
